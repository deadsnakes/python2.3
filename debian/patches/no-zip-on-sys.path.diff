From: Felix Krull <f_krull@gmx.de>
Date: Fri, 27 Apr 2018 07:43:49 -0700
Subject: no-zip-on-sys.path

# DP: Do not add /usr/lib/pythonXY.zip on sys.path.
---
 Modules/getpath.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/Modules/getpath.c b/Modules/getpath.c
index 76103ea..9761f4c 100644
--- a/Modules/getpath.c
+++ b/Modules/getpath.c
@@ -365,7 +365,9 @@ calculate_path(void)
     char *path = getenv("PATH");
     char *prog = Py_GetProgramName();
     char argv0_path[MAXPATHLEN+1];
+#ifdef WITH_ZIP_PATH
     char zip_path[MAXPATHLEN+1];
+#endif
     int pfound, efound; /* 1 if found; -1 if found build directory */
     char *buf;
     size_t bufsz;
@@ -501,6 +503,7 @@ calculate_path(void)
     else
         reduce(prefix);
 
+#ifdef WITH_ZIP_PATH
     strncpy(zip_path, prefix, MAXPATHLEN);
     zip_path[MAXPATHLEN] = '\0';
     if (pfound > 0) { /* Use the reduced prefix returned by Py_GetPrefix() */
@@ -513,6 +516,7 @@ calculate_path(void)
     bufsz = strlen(zip_path);	/* Replace "00" with version */
     zip_path[bufsz - 6] = VERSION[0];
     zip_path[bufsz - 5] = VERSION[2];
+#endif
 
     if (!(efound = search_for_exec_prefix(argv0_path, home))) {
         if (!Py_FrozenFlag)
@@ -552,7 +556,9 @@ calculate_path(void)
         defpath = delim + 1;
     }
 
+#ifdef WITH_ZIP_PATH
     bufsz += strlen(zip_path) + 1;
+#endif
     bufsz += strlen(exec_prefix) + 1;
 
     /* This is the only malloc call in this file */
@@ -573,9 +579,11 @@ calculate_path(void)
         else
             buf[0] = '\0';
 
+#ifdef WITH_ZIP_PATH
         /* Next is the default zip path */
         strcat(buf, zip_path);
         strcat(buf, delimiter);
+#endif
 
         /* Next goes merge of compile-time $PYTHONPATH with
          * dynamically located prefix.
