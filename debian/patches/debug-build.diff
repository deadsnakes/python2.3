From: Felix Krull <f_krull@gmx.de>
Date: Fri, 27 Apr 2018 07:43:49 -0700
Subject: debug-build

---
 Lib/distutils/command/build.py |  7 ++++---
 Lib/distutils/sysconfig.py     |  5 +++--
 Lib/site.py                    |  2 +-
 Makefile.pre.in                | 10 ++++++----
 Python/dynload_shlib.c         |  4 ++++
 Python/sysmodule.c             |  5 +++++
 configure.in                   |  8 +++++++-
 7 files changed, 30 insertions(+), 11 deletions(-)

diff --git a/Lib/distutils/command/build.py b/Lib/distutils/command/build.py
index c927455..09c3f37 100644
--- a/Lib/distutils/command/build.py
+++ b/Lib/distutils/command/build.py
@@ -65,15 +65,16 @@ class build (Command):
     def finalize_options (self):
 
         plat_specifier = ".%s-%s" % (get_platform(), sys.version[0:3])
+        debug_ext = sys.pydebug and '_d' or ''
 
         # 'build_purelib' and 'build_platlib' just default to 'lib' and
         # 'lib.<plat>' under the base build directory.  We only use one of
         # them for a given distribution, though --
         if self.build_purelib is None:
-            self.build_purelib = os.path.join(self.build_base, 'lib')
+            self.build_purelib = os.path.join(self.build_base, 'lib' + debug_ext)
         if self.build_platlib is None:
             self.build_platlib = os.path.join(self.build_base,
-                                              'lib' + plat_specifier)
+                                              'lib' + debug_ext + plat_specifier)
 
         # 'build_lib' is the actual directory that we will use for this
         # particular module distribution -- if user didn't supply it, pick
@@ -88,7 +89,7 @@ class build (Command):
         # "build/temp.<plat>"
         if self.build_temp is None:
             self.build_temp = os.path.join(self.build_base,
-                                           'temp' + plat_specifier)
+                                           'temp' + debug_ext + plat_specifier)
         if self.build_scripts is None:
             self.build_scripts = os.path.join(self.build_base,
                                               'scripts-' + sys.version[0:3])
diff --git a/Lib/distutils/sysconfig.py b/Lib/distutils/sysconfig.py
index 350e247..8d46d33 100644
--- a/Lib/distutils/sysconfig.py
+++ b/Lib/distutils/sysconfig.py
@@ -65,7 +65,8 @@ def get_python_inc(plat_specific=0, prefix=None):
                 if not os.path.exists(inc_dir):
                     inc_dir = os.path.join(os.path.dirname(base), "Include")
             return inc_dir
-        return os.path.join(prefix, "include", "python" + sys.version[:3])
+        return os.path.join(prefix, "include",
+                            "python" + sys.version[:3] + (sys.pydebug and '_d' or ''))
     elif os.name == "nt":
         return os.path.join(prefix, "include")
     elif os.name == "mac":
@@ -205,7 +206,7 @@ def get_makefile_filename():
     if python_build:
         return os.path.join(os.path.dirname(sys.executable), "Makefile")
     lib_dir = get_python_lib(plat_specific=1, standard_lib=1)
-    return os.path.join(lib_dir, "config", "Makefile")
+    return os.path.join(lib_dir, "config" + (sys.pydebug and "_d" or ""), "Makefile")
 
 
 def parse_config_h(fp, g=None):
diff --git a/Lib/site.py b/Lib/site.py
index 8619428..f980f36 100644
--- a/Lib/site.py
+++ b/Lib/site.py
@@ -97,7 +97,7 @@ del dir, dircase, L
 if (os.name == "posix" and sys.path and
     os.path.basename(sys.path[-1]) == "Modules"):
     from distutils.util import get_platform
-    s = "build/lib.%s-%.3s" % (get_platform(), sys.version)
+    s = "build/lib%s.%s-%.3s" % (sys.pydebug and '_d' or '', get_platform(), sys.version)
     s = os.path.join(os.path.dirname(sys.path[-1]), s)
     sys.path.append(s)
     del get_platform, s
diff --git a/Makefile.pre.in b/Makefile.pre.in
index 1a25a3f..6a54932 100644
--- a/Makefile.pre.in
+++ b/Makefile.pre.in
@@ -88,8 +88,8 @@ SCRIPTDIR=	$(prefix)/lib
 # Detailed destination directories
 BINLIBDEST=	$(LIBDIR)/python$(VERSION)
 LIBDEST=	$(SCRIPTDIR)/python$(VERSION)
-INCLUDEPY=	$(INCLUDEDIR)/python$(VERSION)
-CONFINCLUDEPY=	$(CONFINCLUDEDIR)/python$(VERSION)
+INCLUDEPY=	$(INCLUDEDIR)/python$(VERSION)$(DEBUG_EXT)
+CONFINCLUDEPY=	$(CONFINCLUDEDIR)/python$(VERSION)$(DEBUG_EXT)
 LIBP=		$(LIBDIR)/python$(VERSION)
 
 # Symbols used for using shared libraries
@@ -102,6 +102,8 @@ DESTSHARED=	$(BINLIBDEST)/lib-dynload
 EXE=		@EXEEXT@
 BUILDEXE=	@BUILDEXEEXT@
 
+DEBUG_EXT=	@DEBUG_EXT@
+
 # Short name and location for Mac OS X Python framework
 PYTHONFRAMEWORK=	@PYTHONFRAMEWORK@
 PYTHONFRAMEWORKDIR=	@PYTHONFRAMEWORKDIR@
@@ -753,8 +755,8 @@ inclinstall:
 	$(INSTALL_DATA) pyconfig.h $(DESTDIR)$(CONFINCLUDEPY)/pyconfig.h
 
 # Install the library and miscellaneous stuff needed for extending/embedding
-# This goes into $(exec_prefix)
-LIBPL=		$(LIBP)/config
+# This goes into $(exec_prefix)$(DEBUG_EXT)
+LIBPL=		$(LIBP)/config$(DEBUG_EXT)
 libainstall:	all
 	@for i in $(LIBDIR) $(LIBP) $(LIBPL); \
 	do \
diff --git a/Python/dynload_shlib.c b/Python/dynload_shlib.c
index af23f80..b1e5e1d 100644
--- a/Python/dynload_shlib.c
+++ b/Python/dynload_shlib.c
@@ -46,6 +46,10 @@ const struct filedescr _PyImport_DynLoadFiletab[] = {
         {"module.exe", "rb", C_EXTENSION},
         {"MODULE.EXE", "rb", C_EXTENSION},
 #else
+#ifdef Py_DEBUG
+	{"_d.so", "rb", C_EXTENSION},
+	{"module_d.so", "rb", C_EXTENSION},
+#endif
 	{".so", "rb", C_EXTENSION},
 	{"module.so", "rb", C_EXTENSION},
 #endif
diff --git a/Python/sysmodule.c b/Python/sysmodule.c
index a87cd18..58df140 100644
--- a/Python/sysmodule.c
+++ b/Python/sysmodule.c
@@ -1034,6 +1034,11 @@ _PySys_Init(void)
 			     v = PyString_FromString(PyWin_DLLVersionString));
 	Py_XDECREF(v);
 #endif
+#ifdef Py_DEBUG
+	PyDict_SetItemString(sysdict, "pydebug", Py_True);
+#else
+	PyDict_SetItemString(sysdict, "pydebug", Py_False);
+#endif
 	if (warnoptions == NULL) {
 		warnoptions = PyList_New(0);
 	}
diff --git a/configure.in b/configure.in
index 6442cf5..b872d48 100644
--- a/configure.in
+++ b/configure.in
@@ -606,6 +606,12 @@ else AC_MSG_RESULT(no); Py_DEBUG='false'
 fi],
 [AC_MSG_RESULT(no)])
 
+if test "$Py_DEBUG" = 'true'
+then
+	DEBUG_EXT=_d
+fi
+AC_SUBST(DEBUG_EXT)
+
 # XXX Shouldn't the code above that fiddles with BASECFLAGS and OPT be
 # merged with this chunk of code?
 
@@ -1233,7 +1239,7 @@ then
 	case $ac_sys_system in
 	hp*|HP*)   SO=.sl;;
 	CYGWIN*)   SO=.dll;;
-	*)	   SO=.so;;
+	*)	   SO=$DEBUG_EXT.so;;
 	esac
 else
 	# this might also be a termcap variable, see #610332
